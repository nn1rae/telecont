from secrets import choice
import time
from telebot import types
import random
import telebot
from tinydb import TinyDB, Query
import os
import string


db = TinyDB('db.json')
quv = Query()
def new_user(id,username='none'):
    db.insert({'userid': id, 'prom': 0, 'wait': False, 'mon': 0, 'username': username})
def getdb(id,arg2 = 1):
    get0 = db.search(quv.userid == id)
    new_get = get0[0]
    if arg2 == 0:
        return new_get['userid']
    elif arg2 == 1 :
        return new_get['prom']
    elif arg2 == 2 :
        return new_get['wait']
    elif arg2 == 3 :
        return new_get['mon']
    elif arg2 == 4 :
        return new_get['username']

def del_mon(id: int,num):
    db.update({'mon': getdb(id, 3) - num}, quv.userid == id)
def add_mon(id,num):
    db.update({'mon': getdb(id, 3) + num}, quv.userid == id)
def new_code():
    prom_temp = ''
    alfab = string.ascii_uppercase + string.digits
    for i in range(5):
        prom_temp += random.choice(alfab)
    return prom_temp 
bot = telebot.TeleBot('5311428361:AAHmz1afEFRPBjN6fSHeARvarmyeNzsWIOA')

#shity responsez
@bot.message_handler(func=lambda messege: True ,content_types=["sticker"]) 
def stiker(messege):
    sticker_ans = ['–û—Ñ–∏–≥–µ–ª/–∞ —á–∏ —à–æ?','–ù–∞—Ñ–∏–≥ —Ç—ã –º–Ω–µ —Å–≤–æ–∏ —Å—Ç–∏–∫–µ—Ä—ã –∫–∏–¥–∞–µ—à—å –∞?', '–ñ–∞–ª–∫–æ —Ç–≤–æ–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π‚Ä¶.', '–§–∞–∫—Ç–∏—à', '–ì–≤–æ–∑–¥—å –º–Ω–µ –≤ –∫–µ–¥—ã', '–ò–º–ø–µ—Ä–∞—Ç–æ—Ä —Ç–æ–±–æ–π –Ω–µ –¥–æ–≤–æ–ª–µ–Ω', '–ò–º–µ—Ä–∞—Ç–æ—Ä –∑–∞–±—Ä–∞—Ç—å —Ç–≤–æ—è –∂–µ–Ω–∞ –∑–∞ —Ç–∞–∫–æ–µ', '–£–ª—å—è–Ω–∞, –≤—ã?üßê']
    bot.reply_to(messege, random.choice(sticker_ans))

@bot.message_handler(func=lambda messege: True ,content_types=["photo"])
def stiker(messege):
    photo_ans = ['–õ–∞–¥–Ω–æ', 'ü§®üì∏', '–ó–∞ —Ç–∞–∫–æ–µ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö —Å–∞–∂–∞—é—Ç...', '–≠—Ç–æ –Ω–µ –ø–ª–∞–Ω –∑–∞—Ö–≤–∞—Ç–∞ –ü–æ–ª—å—à–∏.', '–ü–ª–∞–Ω –∑–∞—Ö–≤–∞—Ç–∞ –ü–æ–ª—å—à–∏?!?!?!', '–ü–æ–∂–∞–ª—É–π —ç—Ç–æ —è —Å–æ—Ö—Ä–∞–Ω—é']
    bot.reply_to(messege, random.choice(photo_ans))

@bot.message_handler(func=lambda messege: True ,content_types=["voice", "audio"])
def stiker(messege):
    audio_ans = ['–ù—É –æ–∫ –∏ —á—Ç–æ?', '–ß—Ç–æ –∑–∞ —Å—Ç–æ–Ω—ã','–¢—ã —Ç–∞–º –Ω–µ —Ä–∞–∑–±–æ—Ä—á–∏–≤–æ –≥–æ–≤–æ—Ä–∏—à—å –¥–∞ –∏ –º–Ω–µ –ø–æ—Ñ–∏–≥', '–ó–∞—á–µ–º –º–Ω–µ –ø–æ —Ç–≤–æ–µ–º—É —ç—Ç–æ?', '–•–∑']
    bot.reply_to(messege, random.choice(audio_ans))

@bot.message_handler(func=lambda messege: True ,content_types=["video"])
def stiker(messege):
    video_ans = ['–Ø –ø–ª–∞–Ω–∏—Ä—É—é –ø–æ–ª—å—à—É –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å, —ç—Ç–æ –º–Ω–µ –Ω–µ –ø–æ–º–æ–∂–µ—Ç.', '–ò–ª–æ–Ω –º–∞—Å–∫ –ø–æ–∫—É–ø–∞–µ—Ç —ç—Ç–æ –≤–∏–¥–µ–æ', '–ù–∏—á–µ–≥–æ –≥–µ–Ω–∏–∞–ª—å–Ω–µ–µ —è –µ—â—ë –Ω–µ –≤–∏–¥–µ–ª', 'ü¶Ω?', '–ï—Å–ª–∏ –±—ã —è –±—ã–ª –∂–∏–≤–∏–º —Ç–æ –≤—ã–∑–≤–∞–ª –±—ã –∫–æ–ø–æ–≤üë®‚Äçü¶Ø']
    bot.reply_to(messege, random.choice(video_ans))

@bot.message_handler(func=lambda messege: True ,content_types=["animation"]) 
def stiker(messege):
    animation_ans = ['–ù–µ –≥—Ä—É–∑–∏—Ç, —ç—Ç–æ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ?', '–£-—É-—É-—É-—É üêí', '–≠–º–∑, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–æ–ª—å–∫–æ —É –Ω–µ–µ –µ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', 'üôã‚Äç‚ôÇÔ∏è', '–£–ª—å—è–Ω–∞, –≤—ã?üßê']
    bot.reply_to(messege, random.choice(animation_ans))


@bot.message_handler(commands=['play'])
def play(messege):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    item1 = types.KeyboardButton('üéØ')
    markup.add(item1)
    bot.send_message(messege.chat.id, """
    *–û—Ç–ø—Ä–∞–≤—å —Å–º–∞–π–ª–∏–∫ —á—Ç–æ–± –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É*\n
    üéØ - –®–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å 1 –∫ 3 *–í—ã–∏–≥—Ä—ã—à –û—Ç 1 –¥–æ 3 –º–æ–Ω–µ—Ç*
    üé≤ - –®–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å 1 –∫ 6 *–í—ã–∏–≥—Ä—ã—à 6 –º–æ–Ω–µ—Ç*
    """
    , parse_mode= 'Markdown') #, reply_markup=markup)

#dice games
@bot.message_handler(content_types=['dice'])
def dice(messege):
    if getdb(messege.chat.id) == 0:
        bot.send_message(messege.chat.id,'–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –∫–æ–≥–¥–∞ —É —Ç–µ–±—è *0* –ø–æ–ø—ã—Ç–æ–∫',parse_mode='Markdown')
    else:
        no_win_mes = ['–£–≤—ã —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª –∞ –ø—Ä–æ–º–∏–∫ —É—à–µ–ª –≤ –Ω–µ–±—ã—Ç–∏–µ', '–ü—Ä–æ–∏–≥—Ä—ã—à', '–ü–æ–ø—Ä–æ–±—É–π –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑', '–ù–µ —Å–µ–≥–æ–¥–Ω—è', '–ú–æ–∂–µ—à—å —Å—á–∏—Ç–∞—Ç—å —á—Ç–æ –ø—Ä–æ–º–∏–∫ –ø–æ—Ç—Ä–∞—á–µ–Ω –≤ –ø—É—Å—Ç—É—é', '–ü–æ–≤–µ–∑–µ—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑']
        print(str(messege.dice) + 'from ' + str(getdb(messege.from_user.id, 4)))
        if messege.dice.emoji == 'üéØ':
            time.sleep(2.36)
            if messege.dice.value == 6:
                db.update({'mon': getdb(messege.from_user.id, 3) + 3, 'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, '—Ç—ã –≤—ã–∏–≥—Ä–∞–ª 3 –º–æ–Ω–µ—Ç—ã, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è *{}* –º–æ–Ω–µ—Ç'.format(getdb(messege.from_user.id,3)),parse_mode='Markdown')
            elif messege.dice.value == 5:
                db.update({'mon': getdb(messege.from_user.id, 3) + 2, 'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, '—Ç—ã –≤—ã–∏–≥—Ä–∞–ª 2 –º–æ–Ω–µ—Ç—ã, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è *{}* –º–æ–Ω–µ—Ç'.format(getdb(messege.from_user.id,3)),parse_mode='Markdown')
            elif messege.dice.value == 4:
                db.update({'mon': getdb(messege.from_user.id, 3) + 1, 'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, '—Ç—ã –≤—ã–∏–≥—Ä–∞–ª 1 –º–æ–Ω–µ—Çy, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è *{}* –º–æ–Ω–µ—Ç'.format(getdb(messege.from_user.id,3)),parse_mode='Markdown')
            else:
                db.update({'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, random.choice(no_win_mes))
        elif messege.dice.emoji == 'üé≤':
            time.sleep(3)
            if messege.dice.value == 1:
                db.update({'mon': getdb(messege.from_user.id, 3) + 6, 'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, '—Ç—ã –≤—ã–∏–≥—Ä–∞–ª 6 –º–æ–Ω–µ—Ç, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è *{}* –º–æ–Ω–µ—Ç'.format(getdb(messege.from_user.id,3)),parse_mode='Markdown')
            else:
                db.update({'prom': getdb(messege.from_user.id) - 1}, quv.userid == messege.from_user.id)
                bot.send_message(messege.chat.id, random.choice(no_win_mes))
        else:
            bot.send_message(messege.chat.id, '–≠—Ç–∞ –∏–≥—Ä–∞ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
@bot.message_handler(commands=['info'])
def info(messege):
    mes = """
    *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç—É*
    –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –Ω–∞ —è–∑—ã–∫–µ Python3
    –ü—Ä–æ—Å—Ç–æ –ø–æ —Ä–æ—Ñ–ª—É 
    *____________________________*
    –í–µ—Ä—Å–∏—è *0.2*
    
    –°–æ–∑–¥–∞—Ç–µ–ª—å *Klesberg*
    """
    bot.send_message(messege.chat.id,mes,parse_mode= 'Markdown')
#admin pannel
@bot.message_handler(commands=['adm'])
def adm(messege):
    if messege.from_user.id == 999711677:
        
        markup = types.ReplyKeyboardRemove()
        markup = types.ReplyKeyboardMarkup(row_width=2)
        admitem1 = types.KeyboardButton('üëõ–ù–æ–≤—ã–π –∫–æ–¥üëõ')
        admitem2 = types.KeyboardButton('üìÉ–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–¥—ãüìÉ')
        admitem3 = types.KeyboardButton('üßÅ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—ÖüßÅ')
        admitem4 = types.KeyboardButton('üí≥üî®–ò–∑—ä—è—Ç—å –º–æ–Ω–µ—Ç—ã')
        admitem5 = types.KeyboardButton('üì•üíµ–î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—ã')
        admitem6 = types.KeyboardButton('üì®–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
        markup.add(admitem1, admitem2, admitem3, admitem4, admitem5, admitem6)
        bot.send_message(messege.chat.id,'‚öóÔ∏è–ß—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—åü™¨', reply_markup=markup)
    else:
        bot.send_message(messege.chat.id,'–í–∞–º –Ω–µ–ª—å–∑—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–πüîê')

#start
@bot.message_handler(commands=['start'])
def start(messege):
    user_id = messege.from_user.id
    username = messege.from_user.username
    markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn1 = types.KeyboardButton('üöß–ö–æ–ª-–≤–æ –º–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫')
    itembtn2 = types.KeyboardButton('–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—Éüé¢')
    markup.add(itembtn1, itembtn2)
    try:
        
        bot.send_message(messege.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ {messege.from_user.username} üñá,–Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å {getdb(user_id)} –ø–æ–ø—ã—Ç–æ–∫', reply_markup=markup)
    except:
        new_user(user_id, username)
        bot.send_message(messege.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {messege.from_user.username}, –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å.',reply_markup=markup)
@bot.message_handler(commands=['menu'])
def menu(messege):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn1 = types.KeyboardButton('üöß–ö–æ–ª-–≤–æ –º–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫')
    itembtn2 = types.KeyboardButton('–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—Éüé¢')
    itembtn3 = types.KeyboardButton('–ö–æ–ª-–≤–æ –º–æ–∏—Ö –º–æ–Ω–µ—Çüè¶')
    markup.add(itembtn1, itembtn2, itembtn3)
    bot.send_message(messege.chat.id,'–ß–µ–≥–æ —Ö–æ—á–µ—à—å:',reply_markup=markup)



#text handler
@bot.message_handler(content_types=['text'])   
def text_input(messege):
    print(str(messege.text) + ' |  from ' + str(messege.from_user.username))
    with open('promos.txt', 'r') as promos:
        check_prom_tmp = promos.read()

    if getdb(messege.from_user.id,2) == True:
            markup = types.ReplyKeyboardMarkup(row_width=2)
            itembtn1 = types.KeyboardButton('üöß–ö–æ–ª-–≤–æ –º–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫')
            itembtn2 = types.KeyboardButton('–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—Éüé¢')
            itembtn3 = types.KeyboardButton('–ö–æ–ª-–≤–æ –º–æ–∏—Ö –º–æ–Ω–µ—Çüè¶')
            markup.add(itembtn1, itembtn2, itembtn3)
            rend_cal = {'ü•é': 0, '‚öæÔ∏è': 1}
            rend = random.randrange(0,2)
            try:
                if rend_cal[messege.text] == rend:
                    bot.send_message(messege.chat.id,'–ö—Ä–æ—Å—Å, –¥–æ–±–∞–≤–ª—è—é +1 –∫ —Ç–≤–æ–µ–º—É —Ç–µ–∫—É—â–µ–º—É –±–∞–ª–∞–Ω—Å—Éü•Ç',reply_markup=markup)
                    db.update({'mon': getdb(messege.from_user.id, 3) + 1}, quv.userid == messege.from_user.id)
                else:
                    rand_ans = random.randint(0,4)
                    if rand_ans >= 0 and rand_ans < 4:
                        bot.send_message(messege.chat.id,'–ï—Å–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ, —Ç–æ —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª',reply_markup=markup)
                    else:
                        bot.send_message(messege.chat.id,'–ù—É —á—Ç–æ —è –º–æ–≥—É —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å, —Ç—ã –ª–æ—Ö',reply_markup=markup)
                db.update({'wait': False}, quv.userid == messege.from_user.id)
            except:
                markup_ppl = types.ReplyKeyboardMarkup()
                itembtn_ppl = types.KeyboardButton('‚öæÔ∏è')
                itembtn_ppl1 = types.KeyboardButton('ü•é')
                markup_ppl.add(itembtn_ppl1, itembtn_ppl)
                bot.send_message(messege.chat.id, '–ü–∂ –≤—ã–±–µ—Ä–∏ –º—è—á–∏–∫ –∏ –Ω–µ –ø–∏—à–∏ –º–Ω–µ –ø—É—Ä–≥—É', reply_markup=markup_ppl)
        
    elif messege.text in check_prom_tmp and len(messege.text) == 5:
        new_prom = check_prom_tmp.replace(messege.text, '')
        db.update({'prom': getdb(messege.from_user.id) + 1}, quv.userid == messege.from_user.id)
        with open('promos.txt', 'w') as new_prom_list:
            new_prom_list.write(new_prom)
        rand_ans = random.randint(0,4)
        if rand_ans >= 0 and rand_ans < 4:
            bot.send_message(messege.chat.id,'–ö–æ–¥ –∑–∞—é–∑–∞–Ω, +1 –∫ —Ç–≤–æ–∏–º –ø–æ–ø—ã—Ç–∫–∞–ºüé´')
        else:
            bot.send_message(messege.chat.id,'+1 –∫ —Ç–≤–æ–∏–º –Ω–µ—Å—á–∞—Å—Ç–Ω—ã–º –ø–æ–ø—ã—Ç–∫–∞–º –≤—ã–∏–≥—Ä–∞—Ç—å, –≤–æ—Ç –º–µ–¥–∞–ª—å–∫–∞ –∑–∞ —Å—Ç–∞—Ä–∞–Ω–∏–µü•â')
    elif messege.text == 'üöß–ö–æ–ª-–≤–æ –º–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫':
        bot.send_message(messege.chat.id, f'–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è {getdb(messege.from_user.id)} –ø–æ–ø—ã—Ç–æ–∫')
    elif messege.text == '–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—Éüé¢':
        if getdb(messege.from_user.id) > 0 :
            markup_pl = types.ReplyKeyboardMarkup()
            itembtn_pl = types.KeyboardButton('‚öæÔ∏è')
            itembtn_pl1 = types.KeyboardButton('ü•é')
            markup_pl.add(itembtn_pl1, itembtn_pl)
            bot.send_message(messege.chat.id,'‚öæÔ∏è –ò–ª–∏ ü•é?',reply_markup=markup_pl)
            tmp_prom = getdb(messege.from_user.id) - 1
            db.update({'prom': tmp_prom, 'wait': True}, quv.userid == messege.from_user.id)
        else:
            bot.send_message(messege.chat.id,'–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –∫–æ–≥–¥–∞ —É —Ç–µ–±—è *0* –ø–æ–ø—ã—Ç–æ–∫',parse_mode= 'Markdown')
    elif messege.text == '–ö–æ–ª-–≤–æ –º–æ–∏—Ö –º–æ–Ω–µ—Çüè¶':
        rand_ans = random.randint(0,4)
        if rand_ans >= 0 and rand_ans < 3:
            bot.send_message(messege.chat.id,f'–£ —Ç–µ–±—è {getdb(messege.from_user.id, 3)} –º–æ–Ω–µ—Ç.')
        elif rand_ans == 3:
            bot.send_message(messege.chat.id,f'–£ —Ç–µ–±—è {getdb(messege.from_user.id, 3)} –º–æ–Ω–µ—Ç, –Ω—É —Ç—ã –∏ –±–æ–º–∂ –∫–æ–Ω–µ—á–Ω–æ.')
        else:
            bot.send_message(messege.chat.id,f'–£ —Ç–µ–±—è {getdb(messege.from_user.id, 3)} –º–æ–Ω–µ—Ç, –®–ò–ö–£–ï–ú ü•Åüéâüéâ.')
            
    #admin pan inside
    elif messege.from_user.id == 999711677:
        with open('tmp/tmp_del', 'r') as del_check:
            del_check = int(del_check.read())
        if del_check == 1:
            with open('tmp/tmp_user_del', 'w') as tmp_user_del:
                tmp_user_del.write(messege.text)
                with open('tmp/tmp_del','w') as del_write:
                    del_write.write('2')
                bot.send_message(messege.chat.id, '–°–∫–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç –∏–∑—ä—è—Ç—å??üôÉ')
        elif del_check == 2:
            with open('tmp/tmp_user_del', 'a') as tmp_user_del:
                tmp_user_del.write('\n' + messege.text)
                with open('tmp/tmp_del','w') as del_write:
                    del_write.write('0')
            with open('tmp/tmp_user_del','r')as tmp_user_del:
                del_list = list(tmp_user_del.read().split('\n'))
            try:
                del_mon(int(del_list[0]),int(del_list[1]))
                tem_user_var = getdb(int(del_list[0]), 4)
                how_much_has = getdb(int(del_list[0]), 3)
                bot.send_message(messege.chat.id,f'–¢–æ–ª—å–∫–æ —á—Ç–æ –∏–∑—ä—è–ª {del_list[1]} –æ—Ç {tem_user_var}üçúüçú, —Ç–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ/–Ω–µ–µ –Ω–∞ —Å—á–µ—Ç—É –º–æ–Ω–µ—Ç {how_much_has}')

            except:
                bot.send_message(messege.chat.id,'–û—à–∏–±–æ–Ω—å–∫–∞ –ø—Ä–∏ –∏–∑—ä—è—Ç–∏–∏ ü§Ø')
        
        with open('tmp/tmp_add', 'r') as del_check:
            del_check = int(del_check.read())
        if del_check == 1:
            with open('tmp/tmp_user_add', 'w') as tmp_user_del:
                tmp_user_del.write(messege.text)
                with open('tmp/tmp_add','w') as del_write:
                    del_write.write('2')
                bot.send_message(messege.chat.id, '–°–∫–æ–∫ –¥–æ–±–∞–≤–∏—Ç—å?ü§î')
        elif del_check == 2:
            with open('tmp/tmp_user_add', 'a') as tmp_user_del:
                tmp_user_del.write('\n' + messege.text)
                with open('tmp/tmp_add','w') as del_write:
                    del_write.write('0')
            with open('tmp/tmp_user_add','r')as tmp_user_del:
                del_list = list(tmp_user_del.read().split('\n'))
            try:
                add_mon(int(del_list[0]),int(del_list[1]))
                tem_user_var = getdb(int(del_list[0]), 4)
                how_much_has = getdb(int(del_list[0]), 3)
                bot.send_message(messege.chat.id,f'–¢–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª {del_list[1]} –∫ –±–∞–ª–∞–Ω—Å—É {tem_user_var}ü•±, —Ç–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ/–Ω–µ–µ –Ω–∞ —Å—á–µ—Ç—É –º–æ–Ω–µ—Ç {how_much_has}.')

            except:
                bot.send_message(messege.chat.id,'–û—à–∏–±–æ–Ω—å–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ü´¢')
        
        with open('tmp/tmp_send', 'r') as del_check:
            del_check = int(del_check.read())
        if del_check == 1:
            with open('tmp/tmp_user_send', 'w') as tmp_user_del:
                tmp_user_del.write(messege.text)
            with open('tmp/tmp_send','w') as del_write:  #posib error
                    del_write.write('2')
            with open('tmp/tmp_user_send', 'r') as tmp_user_del:
                user_id_send_for_db = tmp_user_del.read()
            try:
                bot.send_message(messege.chat.id, '–ß—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {}?üõç'.format(getdb(int(user_id_send_for_db),4)))
            except:
                bot.send_message(messege.chat.id,'–û—à–∏–±–æ–Ω—å–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏üì≠')
                with open('tmp/tmp_send','w') as del_write:
                    del_write.write('0')
        elif del_check == 2:
            with open('tmp/tmp_user_send', 'a') as tmp_user_del:
                tmp_user_del.write('\n' + messege.text)
                with open('tmp/tmp_send','w') as del_write:
                    del_write.write('0')
            with open('tmp/tmp_user_send','r')as tmp_user_del:
                del_list = list(tmp_user_del.read().split('\n'))
            try:
                tem_user_var = getdb(int(del_list[0]), 4)
                bot.send_message(int(del_list[0]), str(del_list[1]))
                bot.send_message(messege.chat.id, '–¢–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª # {} # –∫–æ–º—É: {} üì¨'.format(del_list[1], tem_user_var))

            except:
                bot.send_message(messege.chat.id,'–û—à–∏–±–æ–Ω—å–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏üì≠')
        

        if messege.text == 'üëõ–ù–æ–≤—ã–π –∫–æ–¥üëõ':
            ncode = new_code()
            with open('promos.txt', 'a') as promos:
                promos.write('\n' + ncode)
            with open('promos.txt', 'rb') as promos:
                bot.send_message(messege.chat.id, f'–¢–æ–ª—å–∫–æ —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª {ncode} ') 
        elif messege.text == 'üìÉ–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–¥—ãüìÉ':
            with open('promos.txt', 'rb') as promosr:
                try:
                    bot.send_message(messege.chat.id,promosr.read())
                except:
                    bot.send_message(messege.chat.id,'–í—Å–µ –∫–æ–¥—ã —É–∫—Ä–∞–ª –≤–∞–ª–µ—Ä–∞')
        elif messege.text == 'üßÅ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—ÖüßÅ':
            tmp_list = db.all()
            for i in range(len(tmp_list)):
                temp_ran = tmp_list[i]
                with open('tmp/tmp_list.txt', 'a') as ttmp:
                    user = temp_ran['userid']
                    mon = temp_ran['mon']
                    prom = temp_ran['prom']
                    username = temp_ran['username']
                    ttmp.write(f'\n–ò–¥—à–∫–∞.  {user} –ù–µ–π–º.  {username} –ú–æ–Ω–µ—Ç–∫–∏.  {mon} –ü–æ–ø—ã—Ç–∫–∏.  {prom}')
            with open('tmp/tmp_list.txt', 'rb') as last_use_tmlist:
                bot.send_message(messege.chat.id,last_use_tmlist.read())
                os.remove("tmp/tmp_list.txt")
        elif messege.text == 'üí≥üî®–ò–∑—ä—è—Ç—å –º–æ–Ω–µ—Ç—ã':
            with open('tmp/tmp_del', 'w') as tmp_del:
                tmp_del.write('1')
            bot.send_message(messege.chat.id,'–ö–∏–Ω—å id—à–∫—É')
        elif messege.text == 'üì•üíµ–î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—ã':
            with open('tmp/tmp_add', 'w') as tmp_del:
                tmp_del.write('1')
                bot.send_message(messege.chat.id,'–ö–∏–Ω—å id—à–∫—É')
        elif messege.text == 'üì®–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
            with open('tmp/tmp_send', 'w') as tmp_del:
                tmp_del.write('1')
                bot.send_message(messege.chat.id,'–ö–∏–Ω—å id—à–∫—É')
    else:
        strpon = messege.text
        if '–ø–æ–Ω' in strpon.lower():
            notoz = ['–ù–µ –±—ã–∫—É–π –∞?', '–ê –≤–æ—Ç —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª', '–û–∫‚Ä¶']
            bot.reply_to(messege,random.choice(notoz))
        else:
            not_und = ['–ù–µ –ø–æ–Ω —á–µ —Ç—ã —à–ø—Ä–µ—Ö–∞–µ—à', '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å –±–ª–∏–Ω', '–ù–µ—Ñ–∏–≥–∞ –Ω–µ –ø–æ–Ω—è–ª, –ú–∏—à–∞ –¥–∞–≤–∞–π –≤—Å–µ –ø–æ –Ω–æ–≤–æ–π','–ú–æ–π —Ä—É—Å—Å–∫–∏–π –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–µ–≥–æ —è–∑—ã–∫']
            bot.send_message(messege.chat.id,random.choice(not_und))
        
    

bot.polling(none_stop=True)